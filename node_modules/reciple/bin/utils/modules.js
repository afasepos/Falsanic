"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJsConfig = exports.getModules = void 0;
const promises_1 = require("node:fs/promises");
const client_1 = require("@reciple/client");
const node_fs_1 = require("node:fs");
const micromatch_1 = __importDefault(require("micromatch"));
const node_path_1 = __importDefault(require("node:path"));
async function getModules(config, filter) {
    const modules = [];
    const { globby, isDynamicPattern } = await import('globby');
    for (const folder of config.modulesFolders) {
        const dir = node_path_1.default.isAbsolute(folder) ? folder : node_path_1.default.join(process.cwd(), folder);
        if (isDynamicPattern(folder, { cwd: process.cwd() })) {
            let modulesFolders = await globby(folder, {
                cwd: process.cwd(),
                onlyDirectories: true,
                absolute: true
            });
            modulesFolders = modulesFolders.filter(f => !micromatch_1.default.isMatch(node_path_1.default.basename(f), config.exclude));
            modules.push(...await getModules({
                ...config,
                modulesFolders
            }));
            continue;
        }
        if (!(0, node_fs_1.existsSync)(dir))
            await (0, promises_1.mkdir)(dir, { recursive: true });
        if (!(await (0, promises_1.lstat)(dir)).isDirectory())
            continue;
        const files = (await (0, promises_1.readdir)(dir)).map(file => node_path_1.default.join(dir, file)).filter(f => !micromatch_1.default.isMatch(node_path_1.default.basename(f), config.exclude));
        modules.push(...files.filter(file => (filter ? filter(file) : file.endsWith('.js'))));
    }
    return modules;
}
exports.getModules = getModules;
async function getJsConfig(file) {
    file = node_path_1.default.resolve(node_path_1.default.isAbsolute(file) ? file : node_path_1.default.join(process.cwd(), file));
    return (0, client_1.recursiveDefaults)(await import(`file://${file}`));
}
exports.getJsConfig = getJsConfig;
//# sourceMappingURL=modules.js.map