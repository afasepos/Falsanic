import { RecipleConfigOptions } from '@reciple/client';
import { ClientOptions } from 'discord.js';
export interface IConfig extends RecipleConfigOptions {
    extends?: string | string[];
    logger: {
        enabled: boolean;
        debugmode: boolean;
        coloredMessages: boolean;
        disableLogPrefix: boolean;
        logToFile: {
            enabled: boolean;
            logsFolder: string;
            file: string;
        };
    };
    modules: {
        modulesFolders: string[];
        exclude: string[];
        disableModuleVersionCheck: boolean;
    };
    client: ClientOptions;
    checkForUpdates: boolean;
    version: string;
}
export declare class Config {
    static defaultConfigPath: string;
    config: IConfig | null;
    readonly configPath: string;
    readonly extensionPaths: string[];
    constructor(configPath: string, extensionPaths?: string[]);
    parseConfig(): Promise<this>;
    getConfig(): IConfig;
    askToken(): Promise<string>;
    parseToken(): string | null;
    static resolveEnvValues<T extends Record<any, any> | string | Array<any>>(object: T, envFile?: string): T;
    static defaultConfig(): IConfig;
    static defaultConfigYaml(): string;
}
