import { AnyCommandInteractionListener, AnyComponentInteractionListener, AnyInteractionListener, InteractionListenerType } from '../types/listeners';
import { Logger, RecipleClient, RecipleModuleScript } from '@reciple/client';
export declare class InteractionEventManager implements RecipleModuleScript {
    private packageJson;
    readonly moduleName: string;
    readonly versions: string;
    client: RecipleClient;
    logger?: Logger;
    constructor();
    onStart(client: RecipleClient<false>): Promise<boolean>;
    onLoad(): Promise<void>;
    onUnload(): Promise<void>;
    emitInteraction(interaction: Parameters<AnyInteractionListener['execute']>[0]): Promise<void>;
    getInteractionListenerType(interaction: Parameters<AnyInteractionListener['execute']>[0]): InteractionListenerType;
    satisfiesCommandName<T extends AnyCommandInteractionListener>(interaction: Parameters<T['execute']>[0], listener: T): Promise<boolean>;
    satisfiesCustomId<T extends AnyComponentInteractionListener>(interaction: Parameters<T['execute']>[0], listener: T): Promise<boolean>;
    isAnyCommandInteractionListener(listener: AnyInteractionListener): listener is AnyCommandInteractionListener;
    isAnyComponentInteractionListener(listener: AnyInteractionListener): listener is AnyComponentInteractionListener;
}
