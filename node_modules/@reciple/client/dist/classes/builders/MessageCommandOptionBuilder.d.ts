import { BaseCommandData } from '../../types/commands';
import { Awaitable, Message } from 'discord.js';
export type MessageCommandOptionResolvable = MessageCommandOptionData | MessageCommandOptionBuilder;
export interface MessageCommandOptionData extends BaseCommandData {
    /**
     * Makes the option required
     */
    required: boolean;
    /**
     * Option validator function
     */
    validator?: MessageCommandOptionValidatorFunction;
}
export interface MessageCommandOptionValue {
    /**
     * Option name
     */
    name: string;
    /**
     * Option value
     */
    value?: string;
    /**
     * Option is missing
     */
    missing: boolean;
    /**
     * Option is invalid
     */
    invalid: boolean;
    /**
     * Command option builder
     */
    builder: MessageCommandOptionBuilder;
}
export type MessageCommandOptionValidatorFunction = (value: string, message: Message<boolean>) => Awaitable<boolean>;
export declare class MessageCommandOptionBuilder implements MessageCommandOptionData {
    name: string;
    description: string;
    required: boolean;
    validator?: MessageCommandOptionValidatorFunction;
    constructor(data?: Partial<MessageCommandOptionData>);
    /**
     * Sets the option name
     * @param name The option name
     */
    setName(name: string): this;
    /**
     * Sets the option description
     * @param description The option description
     */
    setDescription(description: string): this;
    /**
     * Sets whether the option is required
     * @param required Is the option required
     */
    setRequired(required: boolean): this;
    /**
     * Sets the option value validator function
     * @param validator The validate function
     */
    setValidator(validator: MessageCommandOptionValidatorFunction): this;
    toJSON(): MessageCommandOptionData;
    /**
     * Resolve a message command option data and return a builder
     * @param optionResolvable Message command data
     */
    static resolve(optionResolvable: MessageCommandOptionResolvable): MessageCommandOptionBuilder;
    /**
     * Validates a message command option value
     * @param option The option data
     * @param message The command message
     * @param value The option value
     */
    static validateOptionValue(option: MessageCommandOptionResolvable, message: Message, value?: string): Promise<MessageCommandOptionValue>;
}
