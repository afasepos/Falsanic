import { RestOrArray } from 'discord.js';
import { CommandError } from './CommandError';
import { ModuleError } from './ModuleError';
/**
 * @deprecated
 */
export interface BaseErrorCodes {
    [code: string | number]: (() => string) | string;
}
/**
 * @deprecated
 */
export declare enum ErrorType {
    ClientError = 1,
    ModuleError = 2,
    CommandError = 3
}
/**
 * @deprecated
 */
export declare abstract class BaseError<ErrorCodes extends BaseErrorCodes = BaseErrorCodes> extends Error {
    readonly code: keyof BaseErrorCodes;
    abstract readonly errorType: ErrorType;
    constructor(code: keyof BaseErrorCodes, errorCodes: ErrorCodes, ...placeholders: RestOrArray<string>);
    isCommandError(): this is CommandError;
    isModuleError(): this is ModuleError;
    toString(): string;
}
