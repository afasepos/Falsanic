"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.memberHasExecutePermissions = exports.botHasPermissionsToExecute = exports.hasExecutePermissions = void 0;
const discord_js_1 = require("discord.js");
const node_util_1 = require("node:util");
/**
 * Check if a user has the permissions to execute a command.
 * @param options The options for the permission check.
 */
function hasExecutePermissions(options) {
    const requiredPermissions = (options.builder.requiredMemberPermissions ?? (options.builder.isContextMenu() || options.builder.isSlashCommand() ? options.builder.default_member_permissions : undefined)) || undefined;
    if (typeof requiredPermissions !== 'bigint')
        return true;
    return options.memberPermissions.has(requiredPermissions);
}
exports.hasExecutePermissions = hasExecutePermissions;
/**
 * Check if a bot has the permissions to execute a command in a guild or channel.
 * @param guildOrChannel The guild or channel where the command is being executed.
 * @param requiredPermissions The required permissions for the command.
 */
function botHasPermissionsToExecute(guildOrChannel, requiredPermissions) {
    let permissions = null;
    if (guildOrChannel instanceof discord_js_1.Guild) {
        permissions = guildOrChannel.members.me?.permissions ?? null;
    }
    else {
        permissions = guildOrChannel?.permissionsFor(guildOrChannel.client.user.id) ?? null;
    }
    return !!permissions?.has(requiredPermissions);
}
exports.botHasPermissionsToExecute = botHasPermissionsToExecute;
/**
 * @deprecated Use hashasExecutePermissions instead
 */
exports.memberHasExecutePermissions = (0, node_util_1.deprecate)(function memberHasExecutePermissions(options) {
    return hasExecutePermissions(options);
}, 'memberHasExecutePermissions() is deprecated. Use hasExecutePermissions() instead.');
//# sourceMappingURL=permissions.js.map