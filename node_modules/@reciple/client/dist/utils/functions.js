"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSlashCommandOption = exports.getCommandBuilderName = exports.recursiveDefaults = exports.replacePlaceholders = void 0;
const discord_js_1 = require("discord.js");
const commands_1 = require("../types/commands");
var utils_1 = require("@reciple/utils");
Object.defineProperty(exports, "replacePlaceholders", { enumerable: true, get: function () { return utils_1.replacePlaceholders; } });
Object.defineProperty(exports, "recursiveDefaults", { enumerable: true, get: function () { return utils_1.recursiveDefaults; } });
/**
 * Get the name of a command builder.
 * @param command The command builder to get the name of.
 */
function getCommandBuilderName(command) {
    command = typeof command === 'number' ? command : command.commandType;
    switch (command) {
        case commands_1.CommandType.ContextMenuCommand:
            return 'ContextMenuCommand';
        case commands_1.CommandType.MessageCommand:
            return 'MessageCommand';
        case commands_1.CommandType.SlashCommand:
            return 'SlashCommand';
    }
}
exports.getCommandBuilderName = getCommandBuilderName;
function isSlashCommandOption(data) {
    return data instanceof discord_js_1.SlashCommandAttachmentOption ||
        data instanceof discord_js_1.SlashCommandBooleanOption ||
        data instanceof discord_js_1.SlashCommandChannelOption ||
        data instanceof discord_js_1.SlashCommandIntegerOption ||
        data instanceof discord_js_1.SlashCommandMentionableOption ||
        data instanceof discord_js_1.SlashCommandNumberOption ||
        data instanceof discord_js_1.SlashCommandRoleOption ||
        data instanceof discord_js_1.SlashCommandStringOption ||
        data instanceof discord_js_1.SlashCommandUserOption ||
        data instanceof discord_js_1.SlashCommandSubcommandBuilder ||
        data instanceof discord_js_1.SlashCommandSubcommandGroupBuilder;
}
exports.isSlashCommandOption = isSlashCommandOption;
//# sourceMappingURL=functions.js.map