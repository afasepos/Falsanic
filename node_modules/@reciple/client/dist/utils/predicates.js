"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recipleModuleVersionsPredicate = exports.commandResolvablePredicate = exports.commandCooldownPredicate = exports.baseCommandBuilderDataPredicate = exports.commandOrOptionDescriptionPredicate = exports.contextMenuCommandNamePredicate = exports.slashOrMessageCommandNamePredicate = exports.permissionResolvablePredicate = exports.permissionStringPredicate = exports.anyCommandBuilderPredicate = void 0;
const MessageCommandOptionBuilder_1 = require("../classes/builders/MessageCommandOptionBuilder");
const ContextMenuCommandBuilder_1 = require("../classes/builders/ContextMenuCommandBuilder");
const discord_js_1 = require("discord.js");
const SlashCommandBuilder_1 = require("../classes/builders/SlashCommandBuilder");
const commands_1 = require("../types/commands");
const shapeshift_1 = require("@sapphire/shapeshift");
exports.anyCommandBuilderPredicate = shapeshift_1.s.union(shapeshift_1.s.instance(ContextMenuCommandBuilder_1.ContextMenuCommandBuilder), shapeshift_1.s.instance(MessageCommandOptionBuilder_1.MessageCommandOptionBuilder), shapeshift_1.s.instance(SlashCommandBuilder_1.SlashCommandBuilder));
exports.permissionStringPredicate = shapeshift_1.s.enum(...Object.keys(discord_js_1.PermissionFlagsBits));
exports.permissionResolvablePredicate = shapeshift_1.s.union(shapeshift_1.s.instance(discord_js_1.PermissionsBitField), shapeshift_1.s.instance(discord_js_1.BitField), exports.permissionStringPredicate.array, exports.permissionStringPredicate, shapeshift_1.s.bigint, shapeshift_1.s.bigint.array);
exports.slashOrMessageCommandNamePredicate = shapeshift_1.s.string
    .lengthGreaterThanOrEqual(1)
    .lengthLessThanOrEqual(32)
    .regex(/^[\p{Ll}\p{Lm}\p{Lo}\p{N}\p{sc=Devanagari}\p{sc=Thai}_-]+$/u);
exports.contextMenuCommandNamePredicate = shapeshift_1.s.string
    .lengthGreaterThanOrEqual(1)
    .lengthLessThanOrEqual(32)
    .regex(/^( *[\p{P}\p{L}\p{N}\p{sc=Devanagari}\p{sc=Thai}]+ *)+$/u);
exports.commandOrOptionDescriptionPredicate = shapeshift_1.s.string
    .lengthGreaterThanOrEqual(1)
    .lengthLessThanOrEqual(100);
exports.baseCommandBuilderDataPredicate = shapeshift_1.s.object({
    commandType: shapeshift_1.s.nativeEnum(commands_1.CommandType),
    cooldown: shapeshift_1.s.number.positive.finite.optional,
    requiredBotPermissions: exports.permissionResolvablePredicate.optional,
    requiredMemberPermissions: exports.permissionResolvablePredicate.optional,
    halt: shapeshift_1.s.instance(Function).optional,
    execute: shapeshift_1.s.instance(Function).optional,
});
exports.commandCooldownPredicate = shapeshift_1.s.number.positive.finite.positive.optional;
exports.commandResolvablePredicate = shapeshift_1.s.union(exports.anyCommandBuilderPredicate, exports.baseCommandBuilderDataPredicate);
exports.recipleModuleVersionsPredicate = shapeshift_1.s.union(shapeshift_1.s.string, shapeshift_1.s.string.array);
//# sourceMappingURL=predicates.js.map